name: CI builds

on: [push, pull_request]

jobs:
  Bitstream-build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with: 
          submodules: recursive
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip bzip2 cmake build-essential clang bison flex tcl-dev libffi-dev mercurial graphviz xdot pkg-config python3 libftdi-dev python3-dev libeigen3-dev zlib1g-dev
          sudo apt-get install -y libboost-dev libboost-filesystem-dev libboost-thread-dev libboost-program-options-dev libboost-iostreams-dev libboost-dev libboost-system-dev libboost-python-dev libboost-filesystem-dev
          sudo apt-get install -y gcc-riscv64-unknown-elf
        
      - name: Install OSS CAD tools
        run: |
          curl -s https://api.github.com/repos/YosysHQ/oss-cad-suite-build/releases/latest \
            | grep "browser_download_url.*oss-cad-suite-linux-x64-" \
            | cut -d : -f 2,3 \
            | tr -d \" \
            | wget -qi -
          tar -xf oss-cad-suite-linux-x64-*.tgz
          rm -v oss-cad-suite-linux-x64-*.tgz
        
      - name: Build bitstream
        run: |
          source oss-cad-suite/environment
          source ./init
          pip3 install packaging meson ninja
          echo $PATH
          ./make.py --board=sdi_mipi_bridge --toolchain=oxide --build --csr-json csr.json --with_all
      
      - name: Generate dts and config
        run: ./third_party/litex/litex/tools/litex_json2dts_zephyr.py --dts overlay.dts --config overlay.config csr.json

      - uses: actions/upload-artifact@v4
        with:
          name: ${{github.job}}
          path: |
            ./build/antmicro_sdi_mipi_video_converter/gateware/antmicro_sdi_mipi_video_converter.bit
            ./overlay.dts
            ./overlay.config

  Zephyr-build:
    runs-on: ubuntu-24.04
    needs: Bitstream-build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Bitstream-build

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get install -y --no-install-recommends git cmake ninja-build gperf \
            ccache dfu-util device-tree-compiler wget \
            python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
            make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1 python3-venv

      - name: Create Python virtual environment
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          echo "VIRTUAL_ENV=${VIRTUAL_ENV}" >> $GITHUB_ENV
          echo "${VIRTUAL_ENV}/bin" >> $GITHUB_PATH
        shell: bash

      - name: Prepare Zephyr
        run: |
          pip install west
          west init zephyrproject
          cd zephyrproject/
          west config manifest.group-filter -- -hal,-tools,-bootloader,-babblesim
          west config manifest.project-filter -- -nrf_hw_models
          west config --global update.narrow true
          west update
          west zephyr-export
          west packages pip --install
          cd ..

      - name: Install Zephyr SDK
        run: |
          cd zephyrproject/zephyr
          west sdk install -H -t riscv64-zephyr-elf
          cd ../../

      - name: Build Zephyr App
        run: |
          cd zephyrproject/zephyr
          cat ../../Bitstream-build/overlay.config | xargs west build -b litex_vexriscv samples/philosophers/ -- -DDTC_OVERLAY_FILE= ../../Bitstream-build/overlay.dts
          cd ../../

      - uses: actions/upload-artifact@v4
        with:
          name: ${{github.job}}
          path: ./zephyrproject/zephyr/build/zephyr/zephyr.bin
